apiVersion: v1
kind: Service
metadata:
  name: karpor-server
  namespace: {{ .Values.namespace }}
spec:
  ports:
    - port: {{ .Values.server.port }}
  selector:
    {{- include "karpor.selectorLabels" (dict "context" . "component" .Values.server.name) | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "karpor.labels" (dict "context" . "component" .Values.server.name) | nindent 4 }}
  name: karpor-server
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "karpor.selectorLabels" (dict "context" . "component" .Values.server.name) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "karpor.selectorLabels" (dict "context" . "component" .Values.server.name) | nindent 8 }}
    spec:
      containers:
        - args:
            - --search-storage-type=elasticsearch
            - --elastic-search-addresses=http://elasticsearch.{{ .Values.namespace }}.svc:{{ .Values.elasticsearch.port }}
            - --etcd-servers=http://etcd.{{ .Values.namespace }}.svc:{{ .Values.etcd.port }}
            - --secure-port={{ .Values.server.port }}
            - --client-ca-file=/etc/karpor/ca.crt
          command:
            - /karpor
          image: {{ include "karpor.realImage" (dict "context" . "repo" .Values.server.image.repo "tag" .Values.server.image.tag "hasV" true) }}
          imagePullPolicy: {{ .Values.global.image.imagePullPolicy }} 
          name: karpor-server
          ports:
            - containerPort: {{ .Values.server.port }}
          volumeMounts:
            - mountPath: /etc/karpor/
              name: karpor-secret
      volumes:
        - name: karpor-secret
          secret:
            defaultMode: 420
            secretName: karpor-secret
