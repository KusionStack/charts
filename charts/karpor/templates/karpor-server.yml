apiVersion: v1
kind: Service
metadata:
  name: karpor-server
  namespace: {{ .Values.namespace }}
spec:
  ports:
    - port: {{ .Values.server.port }}
  selector:
    {{- include "karpor.selectorLabels" (dict "context" . "component" .Values.server.name) | nindent 4 }}
  type: {{ .Values.server.serviceType }}
---
{{- if .Values.server.ai.authToken }}
apiVersion: v1
kind: Secret
metadata:
  name: karpor-auth
  namespace: {{ .Values.namespace }}
  labels: {{- include "karpor.labels" (dict "context" . "component" .Values.server.name) | nindent 4 }}
type: Opaque
data:
  aiAuthToken: {{ .Values.server.ai.authToken | b64enc | quote }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "karpor.labels" (dict "context" . "component" .Values.server.name) | nindent 4 }}
  name: karpor-server
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      {{- include "karpor.selectorLabels" (dict "context" . "component" .Values.server.name) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "karpor.selectorLabels" (dict "context" . "component" .Values.server.name) | nindent 8 }}
    spec:
      containers:
        - args:
            - --search-storage-type=elasticsearch
            - --elastic-search-addresses=http://elasticsearch.{{ .Values.namespace }}.svc:{{ .Values.elasticsearch.port }}
            - --etcd-servers=http://etcd.{{ .Values.namespace }}.svc:{{ .Values.etcd.port }}
            - --secure-port={{ .Values.server.port }}
            - --client-ca-file=/etc/karpor/ca.crt
            - --service-account-signing-key-file=/etc/karpor/ca.key
            {{- if .Values.server.enableRbac }}
            - --enable-rbac=true
            {{- end }}
            {{- if and .Values.server.ai.authToken .Values.server.ai.baseUrl }}
            - --ai-auth-token=$(aiAuthToken)
            - --ai-base-url={{ .Values.server.ai.baseUrl }}
            {{- if .Values.server.ai.backend }}
            - --ai-backend={{ .Values.server.ai.backend }}
            {{- end }}
            {{- if .Values.server.ai.model }}
            - --ai-model={{ .Values.server.ai.model }}
            {{- end }}
            {{- if .Values.server.ai.temperature }}
            - --ai-temperature={{ .Values.server.ai.temperature }}
            {{- end }}
            {{- if .Values.server.ai.topP }}
            - --ai-top-p={{ .Values.server.ai.topP }}
            {{- end }}
            {{- if .Values.server.ai.proxy.enabled }}
            - --ai-proxy-enabled=true
            {{- if .Values.server.ai.proxy.httpProxy }}
            - --ai-http-proxy={{ .Values.server.ai.proxy.httpProxy }}
            {{- end }}
            {{- if .Values.server.ai.proxy.httpsProxy }}
            - --ai-https-proxy={{ .Values.server.ai.proxy.httpsProxy }}
            {{- end }}
            {{- if .Values.server.ai.proxy.noProxy }}
            - --ai-no-proxy={{ .Values.server.ai.proxy.noProxy }}
            {{- end }}
            {{- end }}
            {{- end }}
          command:
            - /karpor
          image: {{ include "karpor.realImage" (dict "context" . "repo" .Values.server.image.repo "tag" .Values.server.image.tag "needV" (not (hasPrefix "v" .Values.server.image.tag))) }}
          imagePullPolicy: {{ .Values.global.image.imagePullPolicy }} 
          name: karpor-server
          ports:
            - containerPort: {{ .Values.server.port }}
          volumeMounts:
            - mountPath: /etc/karpor/
              name: karpor-secret
            {{- if .Values.server.ai.authToken }}
            - mountPath: /etc/auth/
              name: karpor-auth
            {{- end }}
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          {{- if .Values.server.ai.authToken }}
          envFrom:
            - secretRef:
                name: karpor-auth
          {{- end }}
      volumes:
        - name: karpor-secret
          secret:
            defaultMode: 420
            secretName: karpor-secret
        {{- if .Values.server.ai.authToken }}
        - name: karpor-auth
          secret:
            defaultMode: 420
            secretName: karpor-auth
        {{- end }}
